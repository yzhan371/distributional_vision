%% pmiobjblk
%
% Calculate ppmi and related variables from the obj_blk data array. 
% 
% 
%% Syntax
% 
% ppmi = pmiobjblk(objblk_matrix,m);
% [ppmi,pmi,pxy,px,py] = pmiobjblk(objblk_matrix,m)
%
%% Description
% 
% Based on the one-zero objblk matrix made by makeobjblkmatrix & onezero(may be filtered by
% objfreqfilter), calculate positive pointwise mutual information(ppmi) between
% objects(x) and blocks(y). px = total # of object presence in all blocks/
% total # of blocks. py = total # of all object presences in one
% blocks/total # of object presences in all blocks. pxy is generated by
% averaging the one-zero matrix across all images. pmi = log2(pxy/px*py).
% ppmi = relu(pmi).
% 
% Input arguments: filtered_matrix - numeric array that the ppmi and
% related varaibles are calculated from. m - numeric value, number of
% blocks that used in makeobjblkmatrix.
% 
% Output: ppmi-positive pointwise mutual information between probablity of
% object presence and probablity of blocks. pmi-pointwise mutual information between 
% probablity of object presence and probablity of blocks. pxy- joint
% probablity of object presence and block presence. px - probablity of
% object presence. py- probablity of block presence.
% 
%% Example
%
%   ppmi = pmiobjblk(objblk_matrix,3);
%   [ppmi,pmi,pxy,px,py] = pmiobjblk(objblk_matrix,2)
%
%% Author
% 
% Yiyuan Zhang, Michael F. Bonner | Johns Hopkins University
% 
%% Function
function [ppmi,pmi,pxy,px,py] = pmiobjblk(filtered_matrix,m)


pxy = mean(filtered_matrix,3);

% initialize px values
px = zeros(size(filtered_matrix,1),1);
totx = sum(filtered_matrix,3);
cx = size(filtered_matrix,3)*m;% denominator total block value
for i = 1:length(px)% loop throught all objects
    px(i) = sum(totx(i,:),2)/cx;% calculate px value for obj i
end   
 

% py calculation
py = zeros(size(filtered_matrix,2),1,'single');% initalize py value
cy = sum(filtered_matrix,'all'); % denominator, total object presence in image matrices
toty = sum(filtered_matrix,3); 
for i  = 1:length(py) % loop through all blocks
    py(i) = sum(toty(:,i),1)/cy; % calculate py:(# of obj presences in block i) / cy
end

pxpy =px*transpose(py);% calculate pxpy

pmi = log2(pxy./pxpy);% calculate pmi

ppmi = max(pmi,0);% calculate ppmi


end